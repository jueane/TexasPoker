package com.lingzerg.gamecenter.proto;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoomPro.proto

public final class RoomPro {
  private RoomPro() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RoomProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .RoomProto.Player playerList = 1;
    /**
     * <code>repeated .RoomProto.Player playerList = 1;</code>
     */
    java.util.List<RoomPro.RoomProto.Player> 
        getPlayerListList();
    /**
     * <code>repeated .RoomProto.Player playerList = 1;</code>
     */
    RoomPro.RoomProto.Player getPlayerList(int index);
    /**
     * <code>repeated .RoomProto.Player playerList = 1;</code>
     */
    int getPlayerListCount();
    /**
     * <code>repeated .RoomProto.Player playerList = 1;</code>
     */
    java.util.List<? extends RoomPro.RoomProto.PlayerOrBuilder> 
        getPlayerListOrBuilderList();
    /**
     * <code>repeated .RoomProto.Player playerList = 1;</code>
     */
    RoomPro.RoomProto.PlayerOrBuilder getPlayerListOrBuilder(
        int index);

    // required int32 smallBlind = 2;
    /**
     * <code>required int32 smallBlind = 2;</code>
     */
    boolean hasSmallBlind();
    /**
     * <code>required int32 smallBlind = 2;</code>
     */
    int getSmallBlind();

    // required int32 bankerSeat = 3;
    /**
     * <code>required int32 bankerSeat = 3;</code>
     */
    boolean hasBankerSeat();
    /**
     * <code>required int32 bankerSeat = 3;</code>
     */
    int getBankerSeat();

    // required int32 smallBlindSeat = 4;
    /**
     * <code>required int32 smallBlindSeat = 4;</code>
     */
    boolean hasSmallBlindSeat();
    /**
     * <code>required int32 smallBlindSeat = 4;</code>
     */
    int getSmallBlindSeat();

    // required int32 bigBlindSeat = 5;
    /**
     * <code>required int32 bigBlindSeat = 5;</code>
     */
    boolean hasBigBlindSeat();
    /**
     * <code>required int32 bigBlindSeat = 5;</code>
     */
    int getBigBlindSeat();
  }
  /**
   * Protobuf type {@code RoomProto}
   */
  public static final class RoomProto extends
      com.google.protobuf.GeneratedMessage
      implements RoomProtoOrBuilder {
    // Use RoomProto.newBuilder() to construct.
    private RoomProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomProto defaultInstance;
    public static RoomProto getDefaultInstance() {
      return defaultInstance;
    }

    public RoomProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                playerList_ = new java.util.ArrayList<RoomPro.RoomProto.Player>();
                mutable_bitField0_ |= 0x00000001;
              }
              playerList_.add(input.readMessage(RoomPro.RoomProto.Player.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              smallBlind_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              bankerSeat_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              smallBlindSeat_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              bigBlindSeat_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          playerList_ = java.util.Collections.unmodifiableList(playerList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RoomPro.internal_static_RoomProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RoomPro.internal_static_RoomProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RoomPro.RoomProto.class, RoomPro.RoomProto.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomProto> PARSER =
        new com.google.protobuf.AbstractParser<RoomProto>() {
      public RoomProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomProto> getParserForType() {
      return PARSER;
    }

    public interface PlayerOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required int32 PlayerId = 1;
      /**
       * <code>required int32 PlayerId = 1;</code>
       */
      boolean hasPlayerId();
      /**
       * <code>required int32 PlayerId = 1;</code>
       */
      int getPlayerId();

      // required int32 seat = 2;
      /**
       * <code>required int32 seat = 2;</code>
       */
      boolean hasSeat();
      /**
       * <code>required int32 seat = 2;</code>
       */
      int getSeat();

      // required string nickname = 3;
      /**
       * <code>required string nickname = 3;</code>
       */
      boolean hasNickname();
      /**
       * <code>required string nickname = 3;</code>
       */
      java.lang.String getNickname();
      /**
       * <code>required string nickname = 3;</code>
       */
      com.google.protobuf.ByteString
          getNicknameBytes();

      // required int32 winTimes = 4;
      /**
       * <code>required int32 winTimes = 4;</code>
       */
      boolean hasWinTimes();
      /**
       * <code>required int32 winTimes = 4;</code>
       */
      int getWinTimes();

      // required int32 loseTimes = 5;
      /**
       * <code>required int32 loseTimes = 5;</code>
       */
      boolean hasLoseTimes();
      /**
       * <code>required int32 loseTimes = 5;</code>
       */
      int getLoseTimes();

      // required int32 portrait = 6;
      /**
       * <code>required int32 portrait = 6;</code>
       */
      boolean hasPortrait();
      /**
       * <code>required int32 portrait = 6;</code>
       */
      int getPortrait();

      // required int32 portraitBorder = 7;
      /**
       * <code>required int32 portraitBorder = 7;</code>
       */
      boolean hasPortraitBorder();
      /**
       * <code>required int32 portraitBorder = 7;</code>
       */
      int getPortraitBorder();

      // required bool male = 8;
      /**
       * <code>required bool male = 8;</code>
       */
      boolean hasMale();
      /**
       * <code>required bool male = 8;</code>
       */
      boolean getMale();

      // required string sign = 9;
      /**
       * <code>required string sign = 9;</code>
       */
      boolean hasSign();
      /**
       * <code>required string sign = 9;</code>
       */
      java.lang.String getSign();
      /**
       * <code>required string sign = 9;</code>
       */
      com.google.protobuf.ByteString
          getSignBytes();

      // required bool isChallenger = 10;
      /**
       * <code>required bool isChallenger = 10;</code>
       */
      boolean hasIsChallenger();
      /**
       * <code>required bool isChallenger = 10;</code>
       */
      boolean getIsChallenger();

      // required int32 bankRoll = 11;
      /**
       * <code>required int32 bankRoll = 11;</code>
       *
       * <pre>
       *筹码
       * </pre>
       */
      boolean hasBankRoll();
      /**
       * <code>required int32 bankRoll = 11;</code>
       *
       * <pre>
       *筹码
       * </pre>
       */
      int getBankRoll();

      // required int32 gold = 12;
      /**
       * <code>required int32 gold = 12;</code>
       */
      boolean hasGold();
      /**
       * <code>required int32 gold = 12;</code>
       */
      int getGold();

      // required int32 maxScore = 13;
      /**
       * <code>required int32 maxScore = 13;</code>
       */
      boolean hasMaxScore();
      /**
       * <code>required int32 maxScore = 13;</code>
       */
      int getMaxScore();
    }
    /**
     * Protobuf type {@code RoomProto.Player}
     */
    public static final class Player extends
        com.google.protobuf.GeneratedMessage
        implements PlayerOrBuilder {
      // Use Player.newBuilder() to construct.
      private Player(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Player(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Player defaultInstance;
      public static Player getDefaultInstance() {
        return defaultInstance;
      }

      public Player getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Player(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                playerId_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                seat_ = input.readInt32();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                nickname_ = input.readBytes();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                winTimes_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                loseTimes_ = input.readInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                portrait_ = input.readInt32();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                portraitBorder_ = input.readInt32();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                male_ = input.readBool();
                break;
              }
              case 74: {
                bitField0_ |= 0x00000100;
                sign_ = input.readBytes();
                break;
              }
              case 80: {
                bitField0_ |= 0x00000200;
                isChallenger_ = input.readBool();
                break;
              }
              case 88: {
                bitField0_ |= 0x00000400;
                bankRoll_ = input.readInt32();
                break;
              }
              case 96: {
                bitField0_ |= 0x00000800;
                gold_ = input.readInt32();
                break;
              }
              case 104: {
                bitField0_ |= 0x00001000;
                maxScore_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RoomPro.internal_static_RoomProto_Player_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RoomPro.internal_static_RoomProto_Player_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RoomPro.RoomProto.Player.class, RoomPro.RoomProto.Player.Builder.class);
      }

      public static com.google.protobuf.Parser<Player> PARSER =
          new com.google.protobuf.AbstractParser<Player>() {
        public Player parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Player(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Player> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required int32 PlayerId = 1;
      public static final int PLAYERID_FIELD_NUMBER = 1;
      private int playerId_;
      /**
       * <code>required int32 PlayerId = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 PlayerId = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }

      // required int32 seat = 2;
      public static final int SEAT_FIELD_NUMBER = 2;
      private int seat_;
      /**
       * <code>required int32 seat = 2;</code>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 seat = 2;</code>
       */
      public int getSeat() {
        return seat_;
      }

      // required string nickname = 3;
      public static final int NICKNAME_FIELD_NUMBER = 3;
      private java.lang.Object nickname_;
      /**
       * <code>required string nickname = 3;</code>
       */
      public boolean hasNickname() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string nickname = 3;</code>
       */
      public java.lang.String getNickname() {
        java.lang.Object ref = nickname_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            nickname_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string nickname = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNicknameBytes() {
        java.lang.Object ref = nickname_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nickname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required int32 winTimes = 4;
      public static final int WINTIMES_FIELD_NUMBER = 4;
      private int winTimes_;
      /**
       * <code>required int32 winTimes = 4;</code>
       */
      public boolean hasWinTimes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 winTimes = 4;</code>
       */
      public int getWinTimes() {
        return winTimes_;
      }

      // required int32 loseTimes = 5;
      public static final int LOSETIMES_FIELD_NUMBER = 5;
      private int loseTimes_;
      /**
       * <code>required int32 loseTimes = 5;</code>
       */
      public boolean hasLoseTimes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 loseTimes = 5;</code>
       */
      public int getLoseTimes() {
        return loseTimes_;
      }

      // required int32 portrait = 6;
      public static final int PORTRAIT_FIELD_NUMBER = 6;
      private int portrait_;
      /**
       * <code>required int32 portrait = 6;</code>
       */
      public boolean hasPortrait() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 portrait = 6;</code>
       */
      public int getPortrait() {
        return portrait_;
      }

      // required int32 portraitBorder = 7;
      public static final int PORTRAITBORDER_FIELD_NUMBER = 7;
      private int portraitBorder_;
      /**
       * <code>required int32 portraitBorder = 7;</code>
       */
      public boolean hasPortraitBorder() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 portraitBorder = 7;</code>
       */
      public int getPortraitBorder() {
        return portraitBorder_;
      }

      // required bool male = 8;
      public static final int MALE_FIELD_NUMBER = 8;
      private boolean male_;
      /**
       * <code>required bool male = 8;</code>
       */
      public boolean hasMale() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required bool male = 8;</code>
       */
      public boolean getMale() {
        return male_;
      }

      // required string sign = 9;
      public static final int SIGN_FIELD_NUMBER = 9;
      private java.lang.Object sign_;
      /**
       * <code>required string sign = 9;</code>
       */
      public boolean hasSign() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required string sign = 9;</code>
       */
      public java.lang.String getSign() {
        java.lang.Object ref = sign_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sign_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string sign = 9;</code>
       */
      public com.google.protobuf.ByteString
          getSignBytes() {
        java.lang.Object ref = sign_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sign_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required bool isChallenger = 10;
      public static final int ISCHALLENGER_FIELD_NUMBER = 10;
      private boolean isChallenger_;
      /**
       * <code>required bool isChallenger = 10;</code>
       */
      public boolean hasIsChallenger() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required bool isChallenger = 10;</code>
       */
      public boolean getIsChallenger() {
        return isChallenger_;
      }

      // required int32 bankRoll = 11;
      public static final int BANKROLL_FIELD_NUMBER = 11;
      private int bankRoll_;
      /**
       * <code>required int32 bankRoll = 11;</code>
       *
       * <pre>
       *筹码
       * </pre>
       */
      public boolean hasBankRoll() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 bankRoll = 11;</code>
       *
       * <pre>
       *筹码
       * </pre>
       */
      public int getBankRoll() {
        return bankRoll_;
      }

      // required int32 gold = 12;
      public static final int GOLD_FIELD_NUMBER = 12;
      private int gold_;
      /**
       * <code>required int32 gold = 12;</code>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 gold = 12;</code>
       */
      public int getGold() {
        return gold_;
      }

      // required int32 maxScore = 13;
      public static final int MAXSCORE_FIELD_NUMBER = 13;
      private int maxScore_;
      /**
       * <code>required int32 maxScore = 13;</code>
       */
      public boolean hasMaxScore() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required int32 maxScore = 13;</code>
       */
      public int getMaxScore() {
        return maxScore_;
      }

      private void initFields() {
        playerId_ = 0;
        seat_ = 0;
        nickname_ = "";
        winTimes_ = 0;
        loseTimes_ = 0;
        portrait_ = 0;
        portraitBorder_ = 0;
        male_ = false;
        sign_ = "";
        isChallenger_ = false;
        bankRoll_ = 0;
        gold_ = 0;
        maxScore_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasPlayerId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasSeat()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasNickname()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasWinTimes()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLoseTimes()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPortrait()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPortraitBorder()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasMale()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasSign()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasIsChallenger()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBankRoll()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasGold()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasMaxScore()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, playerId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, seat_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getNicknameBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, winTimes_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, loseTimes_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeInt32(6, portrait_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeInt32(7, portraitBorder_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeBool(8, male_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeBytes(9, getSignBytes());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeBool(10, isChallenger_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeInt32(11, bankRoll_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeInt32(12, gold_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          output.writeInt32(13, maxScore_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, playerId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, seat_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getNicknameBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, winTimes_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, loseTimes_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, portrait_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(7, portraitBorder_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(8, male_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(9, getSignBytes());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(10, isChallenger_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(11, bankRoll_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(12, gold_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(13, maxScore_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static RoomPro.RoomProto.Player parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static RoomPro.RoomProto.Player parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static RoomPro.RoomProto.Player parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static RoomPro.RoomProto.Player parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static RoomPro.RoomProto.Player parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static RoomPro.RoomProto.Player parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static RoomPro.RoomProto.Player parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static RoomPro.RoomProto.Player parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static RoomPro.RoomProto.Player parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static RoomPro.RoomProto.Player parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(RoomPro.RoomProto.Player prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code RoomProto.Player}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements RoomPro.RoomProto.PlayerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return RoomPro.internal_static_RoomProto_Player_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return RoomPro.internal_static_RoomProto_Player_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  RoomPro.RoomProto.Player.class, RoomPro.RoomProto.Player.Builder.class);
        }

        // Construct using RoomPro.RoomProto.Player.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          playerId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          seat_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          nickname_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          winTimes_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          loseTimes_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          portrait_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          portraitBorder_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          male_ = false;
          bitField0_ = (bitField0_ & ~0x00000080);
          sign_ = "";
          bitField0_ = (bitField0_ & ~0x00000100);
          isChallenger_ = false;
          bitField0_ = (bitField0_ & ~0x00000200);
          bankRoll_ = 0;
          bitField0_ = (bitField0_ & ~0x00000400);
          gold_ = 0;
          bitField0_ = (bitField0_ & ~0x00000800);
          maxScore_ = 0;
          bitField0_ = (bitField0_ & ~0x00001000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return RoomPro.internal_static_RoomProto_Player_descriptor;
        }

        public RoomPro.RoomProto.Player getDefaultInstanceForType() {
          return RoomPro.RoomProto.Player.getDefaultInstance();
        }

        public RoomPro.RoomProto.Player build() {
          RoomPro.RoomProto.Player result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public RoomPro.RoomProto.Player buildPartial() {
          RoomPro.RoomProto.Player result = new RoomPro.RoomProto.Player(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.playerId_ = playerId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.seat_ = seat_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.nickname_ = nickname_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.winTimes_ = winTimes_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.loseTimes_ = loseTimes_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.portrait_ = portrait_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.portraitBorder_ = portraitBorder_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.male_ = male_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.sign_ = sign_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.isChallenger_ = isChallenger_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.bankRoll_ = bankRoll_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.gold_ = gold_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00001000;
          }
          result.maxScore_ = maxScore_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof RoomPro.RoomProto.Player) {
            return mergeFrom((RoomPro.RoomProto.Player)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(RoomPro.RoomProto.Player other) {
          if (other == RoomPro.RoomProto.Player.getDefaultInstance()) return this;
          if (other.hasPlayerId()) {
            setPlayerId(other.getPlayerId());
          }
          if (other.hasSeat()) {
            setSeat(other.getSeat());
          }
          if (other.hasNickname()) {
            bitField0_ |= 0x00000004;
            nickname_ = other.nickname_;
            onChanged();
          }
          if (other.hasWinTimes()) {
            setWinTimes(other.getWinTimes());
          }
          if (other.hasLoseTimes()) {
            setLoseTimes(other.getLoseTimes());
          }
          if (other.hasPortrait()) {
            setPortrait(other.getPortrait());
          }
          if (other.hasPortraitBorder()) {
            setPortraitBorder(other.getPortraitBorder());
          }
          if (other.hasMale()) {
            setMale(other.getMale());
          }
          if (other.hasSign()) {
            bitField0_ |= 0x00000100;
            sign_ = other.sign_;
            onChanged();
          }
          if (other.hasIsChallenger()) {
            setIsChallenger(other.getIsChallenger());
          }
          if (other.hasBankRoll()) {
            setBankRoll(other.getBankRoll());
          }
          if (other.hasGold()) {
            setGold(other.getGold());
          }
          if (other.hasMaxScore()) {
            setMaxScore(other.getMaxScore());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasPlayerId()) {
            
            return false;
          }
          if (!hasSeat()) {
            
            return false;
          }
          if (!hasNickname()) {
            
            return false;
          }
          if (!hasWinTimes()) {
            
            return false;
          }
          if (!hasLoseTimes()) {
            
            return false;
          }
          if (!hasPortrait()) {
            
            return false;
          }
          if (!hasPortraitBorder()) {
            
            return false;
          }
          if (!hasMale()) {
            
            return false;
          }
          if (!hasSign()) {
            
            return false;
          }
          if (!hasIsChallenger()) {
            
            return false;
          }
          if (!hasBankRoll()) {
            
            return false;
          }
          if (!hasGold()) {
            
            return false;
          }
          if (!hasMaxScore()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          RoomPro.RoomProto.Player parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (RoomPro.RoomProto.Player) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required int32 PlayerId = 1;
        private int playerId_ ;
        /**
         * <code>required int32 PlayerId = 1;</code>
         */
        public boolean hasPlayerId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 PlayerId = 1;</code>
         */
        public int getPlayerId() {
          return playerId_;
        }
        /**
         * <code>required int32 PlayerId = 1;</code>
         */
        public Builder setPlayerId(int value) {
          bitField0_ |= 0x00000001;
          playerId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 PlayerId = 1;</code>
         */
        public Builder clearPlayerId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          playerId_ = 0;
          onChanged();
          return this;
        }

        // required int32 seat = 2;
        private int seat_ ;
        /**
         * <code>required int32 seat = 2;</code>
         */
        public boolean hasSeat() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required int32 seat = 2;</code>
         */
        public int getSeat() {
          return seat_;
        }
        /**
         * <code>required int32 seat = 2;</code>
         */
        public Builder setSeat(int value) {
          bitField0_ |= 0x00000002;
          seat_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 seat = 2;</code>
         */
        public Builder clearSeat() {
          bitField0_ = (bitField0_ & ~0x00000002);
          seat_ = 0;
          onChanged();
          return this;
        }

        // required string nickname = 3;
        private java.lang.Object nickname_ = "";
        /**
         * <code>required string nickname = 3;</code>
         */
        public boolean hasNickname() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required string nickname = 3;</code>
         */
        public java.lang.String getNickname() {
          java.lang.Object ref = nickname_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            nickname_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string nickname = 3;</code>
         */
        public com.google.protobuf.ByteString
            getNicknameBytes() {
          java.lang.Object ref = nickname_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            nickname_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string nickname = 3;</code>
         */
        public Builder setNickname(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          nickname_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string nickname = 3;</code>
         */
        public Builder clearNickname() {
          bitField0_ = (bitField0_ & ~0x00000004);
          nickname_ = getDefaultInstance().getNickname();
          onChanged();
          return this;
        }
        /**
         * <code>required string nickname = 3;</code>
         */
        public Builder setNicknameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          nickname_ = value;
          onChanged();
          return this;
        }

        // required int32 winTimes = 4;
        private int winTimes_ ;
        /**
         * <code>required int32 winTimes = 4;</code>
         */
        public boolean hasWinTimes() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required int32 winTimes = 4;</code>
         */
        public int getWinTimes() {
          return winTimes_;
        }
        /**
         * <code>required int32 winTimes = 4;</code>
         */
        public Builder setWinTimes(int value) {
          bitField0_ |= 0x00000008;
          winTimes_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 winTimes = 4;</code>
         */
        public Builder clearWinTimes() {
          bitField0_ = (bitField0_ & ~0x00000008);
          winTimes_ = 0;
          onChanged();
          return this;
        }

        // required int32 loseTimes = 5;
        private int loseTimes_ ;
        /**
         * <code>required int32 loseTimes = 5;</code>
         */
        public boolean hasLoseTimes() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>required int32 loseTimes = 5;</code>
         */
        public int getLoseTimes() {
          return loseTimes_;
        }
        /**
         * <code>required int32 loseTimes = 5;</code>
         */
        public Builder setLoseTimes(int value) {
          bitField0_ |= 0x00000010;
          loseTimes_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 loseTimes = 5;</code>
         */
        public Builder clearLoseTimes() {
          bitField0_ = (bitField0_ & ~0x00000010);
          loseTimes_ = 0;
          onChanged();
          return this;
        }

        // required int32 portrait = 6;
        private int portrait_ ;
        /**
         * <code>required int32 portrait = 6;</code>
         */
        public boolean hasPortrait() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>required int32 portrait = 6;</code>
         */
        public int getPortrait() {
          return portrait_;
        }
        /**
         * <code>required int32 portrait = 6;</code>
         */
        public Builder setPortrait(int value) {
          bitField0_ |= 0x00000020;
          portrait_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 portrait = 6;</code>
         */
        public Builder clearPortrait() {
          bitField0_ = (bitField0_ & ~0x00000020);
          portrait_ = 0;
          onChanged();
          return this;
        }

        // required int32 portraitBorder = 7;
        private int portraitBorder_ ;
        /**
         * <code>required int32 portraitBorder = 7;</code>
         */
        public boolean hasPortraitBorder() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>required int32 portraitBorder = 7;</code>
         */
        public int getPortraitBorder() {
          return portraitBorder_;
        }
        /**
         * <code>required int32 portraitBorder = 7;</code>
         */
        public Builder setPortraitBorder(int value) {
          bitField0_ |= 0x00000040;
          portraitBorder_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 portraitBorder = 7;</code>
         */
        public Builder clearPortraitBorder() {
          bitField0_ = (bitField0_ & ~0x00000040);
          portraitBorder_ = 0;
          onChanged();
          return this;
        }

        // required bool male = 8;
        private boolean male_ ;
        /**
         * <code>required bool male = 8;</code>
         */
        public boolean hasMale() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>required bool male = 8;</code>
         */
        public boolean getMale() {
          return male_;
        }
        /**
         * <code>required bool male = 8;</code>
         */
        public Builder setMale(boolean value) {
          bitField0_ |= 0x00000080;
          male_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool male = 8;</code>
         */
        public Builder clearMale() {
          bitField0_ = (bitField0_ & ~0x00000080);
          male_ = false;
          onChanged();
          return this;
        }

        // required string sign = 9;
        private java.lang.Object sign_ = "";
        /**
         * <code>required string sign = 9;</code>
         */
        public boolean hasSign() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>required string sign = 9;</code>
         */
        public java.lang.String getSign() {
          java.lang.Object ref = sign_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            sign_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string sign = 9;</code>
         */
        public com.google.protobuf.ByteString
            getSignBytes() {
          java.lang.Object ref = sign_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sign_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string sign = 9;</code>
         */
        public Builder setSign(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          sign_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string sign = 9;</code>
         */
        public Builder clearSign() {
          bitField0_ = (bitField0_ & ~0x00000100);
          sign_ = getDefaultInstance().getSign();
          onChanged();
          return this;
        }
        /**
         * <code>required string sign = 9;</code>
         */
        public Builder setSignBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          sign_ = value;
          onChanged();
          return this;
        }

        // required bool isChallenger = 10;
        private boolean isChallenger_ ;
        /**
         * <code>required bool isChallenger = 10;</code>
         */
        public boolean hasIsChallenger() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>required bool isChallenger = 10;</code>
         */
        public boolean getIsChallenger() {
          return isChallenger_;
        }
        /**
         * <code>required bool isChallenger = 10;</code>
         */
        public Builder setIsChallenger(boolean value) {
          bitField0_ |= 0x00000200;
          isChallenger_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool isChallenger = 10;</code>
         */
        public Builder clearIsChallenger() {
          bitField0_ = (bitField0_ & ~0x00000200);
          isChallenger_ = false;
          onChanged();
          return this;
        }

        // required int32 bankRoll = 11;
        private int bankRoll_ ;
        /**
         * <code>required int32 bankRoll = 11;</code>
         *
         * <pre>
         *筹码
         * </pre>
         */
        public boolean hasBankRoll() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>required int32 bankRoll = 11;</code>
         *
         * <pre>
         *筹码
         * </pre>
         */
        public int getBankRoll() {
          return bankRoll_;
        }
        /**
         * <code>required int32 bankRoll = 11;</code>
         *
         * <pre>
         *筹码
         * </pre>
         */
        public Builder setBankRoll(int value) {
          bitField0_ |= 0x00000400;
          bankRoll_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 bankRoll = 11;</code>
         *
         * <pre>
         *筹码
         * </pre>
         */
        public Builder clearBankRoll() {
          bitField0_ = (bitField0_ & ~0x00000400);
          bankRoll_ = 0;
          onChanged();
          return this;
        }

        // required int32 gold = 12;
        private int gold_ ;
        /**
         * <code>required int32 gold = 12;</code>
         */
        public boolean hasGold() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>required int32 gold = 12;</code>
         */
        public int getGold() {
          return gold_;
        }
        /**
         * <code>required int32 gold = 12;</code>
         */
        public Builder setGold(int value) {
          bitField0_ |= 0x00000800;
          gold_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 gold = 12;</code>
         */
        public Builder clearGold() {
          bitField0_ = (bitField0_ & ~0x00000800);
          gold_ = 0;
          onChanged();
          return this;
        }

        // required int32 maxScore = 13;
        private int maxScore_ ;
        /**
         * <code>required int32 maxScore = 13;</code>
         */
        public boolean hasMaxScore() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>required int32 maxScore = 13;</code>
         */
        public int getMaxScore() {
          return maxScore_;
        }
        /**
         * <code>required int32 maxScore = 13;</code>
         */
        public Builder setMaxScore(int value) {
          bitField0_ |= 0x00001000;
          maxScore_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 maxScore = 13;</code>
         */
        public Builder clearMaxScore() {
          bitField0_ = (bitField0_ & ~0x00001000);
          maxScore_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:RoomProto.Player)
      }

      static {
        defaultInstance = new Player(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:RoomProto.Player)
    }

    private int bitField0_;
    // repeated .RoomProto.Player playerList = 1;
    public static final int PLAYERLIST_FIELD_NUMBER = 1;
    private java.util.List<RoomPro.RoomProto.Player> playerList_;
    /**
     * <code>repeated .RoomProto.Player playerList = 1;</code>
     */
    public java.util.List<RoomPro.RoomProto.Player> getPlayerListList() {
      return playerList_;
    }
    /**
     * <code>repeated .RoomProto.Player playerList = 1;</code>
     */
    public java.util.List<? extends RoomPro.RoomProto.PlayerOrBuilder> 
        getPlayerListOrBuilderList() {
      return playerList_;
    }
    /**
     * <code>repeated .RoomProto.Player playerList = 1;</code>
     */
    public int getPlayerListCount() {
      return playerList_.size();
    }
    /**
     * <code>repeated .RoomProto.Player playerList = 1;</code>
     */
    public RoomPro.RoomProto.Player getPlayerList(int index) {
      return playerList_.get(index);
    }
    /**
     * <code>repeated .RoomProto.Player playerList = 1;</code>
     */
    public RoomPro.RoomProto.PlayerOrBuilder getPlayerListOrBuilder(
        int index) {
      return playerList_.get(index);
    }

    // required int32 smallBlind = 2;
    public static final int SMALLBLIND_FIELD_NUMBER = 2;
    private int smallBlind_;
    /**
     * <code>required int32 smallBlind = 2;</code>
     */
    public boolean hasSmallBlind() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 smallBlind = 2;</code>
     */
    public int getSmallBlind() {
      return smallBlind_;
    }

    // required int32 bankerSeat = 3;
    public static final int BANKERSEAT_FIELD_NUMBER = 3;
    private int bankerSeat_;
    /**
     * <code>required int32 bankerSeat = 3;</code>
     */
    public boolean hasBankerSeat() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 bankerSeat = 3;</code>
     */
    public int getBankerSeat() {
      return bankerSeat_;
    }

    // required int32 smallBlindSeat = 4;
    public static final int SMALLBLINDSEAT_FIELD_NUMBER = 4;
    private int smallBlindSeat_;
    /**
     * <code>required int32 smallBlindSeat = 4;</code>
     */
    public boolean hasSmallBlindSeat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 smallBlindSeat = 4;</code>
     */
    public int getSmallBlindSeat() {
      return smallBlindSeat_;
    }

    // required int32 bigBlindSeat = 5;
    public static final int BIGBLINDSEAT_FIELD_NUMBER = 5;
    private int bigBlindSeat_;
    /**
     * <code>required int32 bigBlindSeat = 5;</code>
     */
    public boolean hasBigBlindSeat() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 bigBlindSeat = 5;</code>
     */
    public int getBigBlindSeat() {
      return bigBlindSeat_;
    }

    private void initFields() {
      playerList_ = java.util.Collections.emptyList();
      smallBlind_ = 0;
      bankerSeat_ = 0;
      smallBlindSeat_ = 0;
      bigBlindSeat_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSmallBlind()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBankerSeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSmallBlindSeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBigBlindSeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPlayerListCount(); i++) {
        if (!getPlayerList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < playerList_.size(); i++) {
        output.writeMessage(1, playerList_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, smallBlind_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, bankerSeat_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, smallBlindSeat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, bigBlindSeat_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < playerList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerList_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, smallBlind_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, bankerSeat_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, smallBlindSeat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, bigBlindSeat_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static RoomPro.RoomProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RoomPro.RoomProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RoomPro.RoomProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RoomPro.RoomProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RoomPro.RoomProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static RoomPro.RoomProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static RoomPro.RoomProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static RoomPro.RoomProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static RoomPro.RoomProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static RoomPro.RoomProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(RoomPro.RoomProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RoomProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements RoomPro.RoomProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RoomPro.internal_static_RoomProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RoomPro.internal_static_RoomProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RoomPro.RoomProto.class, RoomPro.RoomProto.Builder.class);
      }

      // Construct using RoomPro.RoomProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playerListBuilder_ == null) {
          playerList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          playerListBuilder_.clear();
        }
        smallBlind_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        bankerSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        smallBlindSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bigBlindSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RoomPro.internal_static_RoomProto_descriptor;
      }

      public RoomPro.RoomProto getDefaultInstanceForType() {
        return RoomPro.RoomProto.getDefaultInstance();
      }

      public RoomPro.RoomProto build() {
        RoomPro.RoomProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public RoomPro.RoomProto buildPartial() {
        RoomPro.RoomProto result = new RoomPro.RoomProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (playerListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            playerList_ = java.util.Collections.unmodifiableList(playerList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.playerList_ = playerList_;
        } else {
          result.playerList_ = playerListBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.smallBlind_ = smallBlind_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bankerSeat_ = bankerSeat_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.smallBlindSeat_ = smallBlindSeat_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bigBlindSeat_ = bigBlindSeat_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RoomPro.RoomProto) {
          return mergeFrom((RoomPro.RoomProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RoomPro.RoomProto other) {
        if (other == RoomPro.RoomProto.getDefaultInstance()) return this;
        if (playerListBuilder_ == null) {
          if (!other.playerList_.isEmpty()) {
            if (playerList_.isEmpty()) {
              playerList_ = other.playerList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePlayerListIsMutable();
              playerList_.addAll(other.playerList_);
            }
            onChanged();
          }
        } else {
          if (!other.playerList_.isEmpty()) {
            if (playerListBuilder_.isEmpty()) {
              playerListBuilder_.dispose();
              playerListBuilder_ = null;
              playerList_ = other.playerList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              playerListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerListFieldBuilder() : null;
            } else {
              playerListBuilder_.addAllMessages(other.playerList_);
            }
          }
        }
        if (other.hasSmallBlind()) {
          setSmallBlind(other.getSmallBlind());
        }
        if (other.hasBankerSeat()) {
          setBankerSeat(other.getBankerSeat());
        }
        if (other.hasSmallBlindSeat()) {
          setSmallBlindSeat(other.getSmallBlindSeat());
        }
        if (other.hasBigBlindSeat()) {
          setBigBlindSeat(other.getBigBlindSeat());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSmallBlind()) {
          
          return false;
        }
        if (!hasBankerSeat()) {
          
          return false;
        }
        if (!hasSmallBlindSeat()) {
          
          return false;
        }
        if (!hasBigBlindSeat()) {
          
          return false;
        }
        for (int i = 0; i < getPlayerListCount(); i++) {
          if (!getPlayerList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RoomPro.RoomProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RoomPro.RoomProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .RoomProto.Player playerList = 1;
      private java.util.List<RoomPro.RoomProto.Player> playerList_ =
        java.util.Collections.emptyList();
      private void ensurePlayerListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          playerList_ = new java.util.ArrayList<RoomPro.RoomProto.Player>(playerList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          RoomPro.RoomProto.Player, RoomPro.RoomProto.Player.Builder, RoomPro.RoomProto.PlayerOrBuilder> playerListBuilder_;

      /**
       * <code>repeated .RoomProto.Player playerList = 1;</code>
       */
      public java.util.List<RoomPro.RoomProto.Player> getPlayerListList() {
        if (playerListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerList_);
        } else {
          return playerListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomProto.Player playerList = 1;</code>
       */
      public int getPlayerListCount() {
        if (playerListBuilder_ == null) {
          return playerList_.size();
        } else {
          return playerListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomProto.Player playerList = 1;</code>
       */
      public RoomPro.RoomProto.Player getPlayerList(int index) {
        if (playerListBuilder_ == null) {
          return playerList_.get(index);
        } else {
          return playerListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomProto.Player playerList = 1;</code>
       */
      public Builder setPlayerList(
          int index, RoomPro.RoomProto.Player value) {
        if (playerListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerListIsMutable();
          playerList_.set(index, value);
          onChanged();
        } else {
          playerListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomProto.Player playerList = 1;</code>
       */
      public Builder setPlayerList(
          int index, RoomPro.RoomProto.Player.Builder builderForValue) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          playerList_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomProto.Player playerList = 1;</code>
       */
      public Builder addPlayerList(RoomPro.RoomProto.Player value) {
        if (playerListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerListIsMutable();
          playerList_.add(value);
          onChanged();
        } else {
          playerListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomProto.Player playerList = 1;</code>
       */
      public Builder addPlayerList(
          int index, RoomPro.RoomProto.Player value) {
        if (playerListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerListIsMutable();
          playerList_.add(index, value);
          onChanged();
        } else {
          playerListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomProto.Player playerList = 1;</code>
       */
      public Builder addPlayerList(
          RoomPro.RoomProto.Player.Builder builderForValue) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          playerList_.add(builderForValue.build());
          onChanged();
        } else {
          playerListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomProto.Player playerList = 1;</code>
       */
      public Builder addPlayerList(
          int index, RoomPro.RoomProto.Player.Builder builderForValue) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          playerList_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomProto.Player playerList = 1;</code>
       */
      public Builder addAllPlayerList(
          java.lang.Iterable<? extends RoomPro.RoomProto.Player> values) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          super.addAll(values, playerList_);
          onChanged();
        } else {
          playerListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomProto.Player playerList = 1;</code>
       */
      public Builder clearPlayerList() {
        if (playerListBuilder_ == null) {
          playerList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          playerListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomProto.Player playerList = 1;</code>
       */
      public Builder removePlayerList(int index) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          playerList_.remove(index);
          onChanged();
        } else {
          playerListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomProto.Player playerList = 1;</code>
       */
      public RoomPro.RoomProto.Player.Builder getPlayerListBuilder(
          int index) {
        return getPlayerListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomProto.Player playerList = 1;</code>
       */
      public RoomPro.RoomProto.PlayerOrBuilder getPlayerListOrBuilder(
          int index) {
        if (playerListBuilder_ == null) {
          return playerList_.get(index);  } else {
          return playerListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomProto.Player playerList = 1;</code>
       */
      public java.util.List<? extends RoomPro.RoomProto.PlayerOrBuilder> 
           getPlayerListOrBuilderList() {
        if (playerListBuilder_ != null) {
          return playerListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerList_);
        }
      }
      /**
       * <code>repeated .RoomProto.Player playerList = 1;</code>
       */
      public RoomPro.RoomProto.Player.Builder addPlayerListBuilder() {
        return getPlayerListFieldBuilder().addBuilder(
            RoomPro.RoomProto.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomProto.Player playerList = 1;</code>
       */
      public RoomPro.RoomProto.Player.Builder addPlayerListBuilder(
          int index) {
        return getPlayerListFieldBuilder().addBuilder(
            index, RoomPro.RoomProto.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomProto.Player playerList = 1;</code>
       */
      public java.util.List<RoomPro.RoomProto.Player.Builder> 
           getPlayerListBuilderList() {
        return getPlayerListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          RoomPro.RoomProto.Player, RoomPro.RoomProto.Player.Builder, RoomPro.RoomProto.PlayerOrBuilder> 
          getPlayerListFieldBuilder() {
        if (playerListBuilder_ == null) {
          playerListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              RoomPro.RoomProto.Player, RoomPro.RoomProto.Player.Builder, RoomPro.RoomProto.PlayerOrBuilder>(
                  playerList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          playerList_ = null;
        }
        return playerListBuilder_;
      }

      // required int32 smallBlind = 2;
      private int smallBlind_ ;
      /**
       * <code>required int32 smallBlind = 2;</code>
       */
      public boolean hasSmallBlind() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 smallBlind = 2;</code>
       */
      public int getSmallBlind() {
        return smallBlind_;
      }
      /**
       * <code>required int32 smallBlind = 2;</code>
       */
      public Builder setSmallBlind(int value) {
        bitField0_ |= 0x00000002;
        smallBlind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 smallBlind = 2;</code>
       */
      public Builder clearSmallBlind() {
        bitField0_ = (bitField0_ & ~0x00000002);
        smallBlind_ = 0;
        onChanged();
        return this;
      }

      // required int32 bankerSeat = 3;
      private int bankerSeat_ ;
      /**
       * <code>required int32 bankerSeat = 3;</code>
       */
      public boolean hasBankerSeat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 bankerSeat = 3;</code>
       */
      public int getBankerSeat() {
        return bankerSeat_;
      }
      /**
       * <code>required int32 bankerSeat = 3;</code>
       */
      public Builder setBankerSeat(int value) {
        bitField0_ |= 0x00000004;
        bankerSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 bankerSeat = 3;</code>
       */
      public Builder clearBankerSeat() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bankerSeat_ = 0;
        onChanged();
        return this;
      }

      // required int32 smallBlindSeat = 4;
      private int smallBlindSeat_ ;
      /**
       * <code>required int32 smallBlindSeat = 4;</code>
       */
      public boolean hasSmallBlindSeat() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 smallBlindSeat = 4;</code>
       */
      public int getSmallBlindSeat() {
        return smallBlindSeat_;
      }
      /**
       * <code>required int32 smallBlindSeat = 4;</code>
       */
      public Builder setSmallBlindSeat(int value) {
        bitField0_ |= 0x00000008;
        smallBlindSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 smallBlindSeat = 4;</code>
       */
      public Builder clearSmallBlindSeat() {
        bitField0_ = (bitField0_ & ~0x00000008);
        smallBlindSeat_ = 0;
        onChanged();
        return this;
      }

      // required int32 bigBlindSeat = 5;
      private int bigBlindSeat_ ;
      /**
       * <code>required int32 bigBlindSeat = 5;</code>
       */
      public boolean hasBigBlindSeat() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 bigBlindSeat = 5;</code>
       */
      public int getBigBlindSeat() {
        return bigBlindSeat_;
      }
      /**
       * <code>required int32 bigBlindSeat = 5;</code>
       */
      public Builder setBigBlindSeat(int value) {
        bitField0_ |= 0x00000010;
        bigBlindSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 bigBlindSeat = 5;</code>
       */
      public Builder clearBigBlindSeat() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bigBlindSeat_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RoomProto)
    }

    static {
      defaultInstance = new RoomProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:RoomProto)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RoomProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RoomProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RoomProto_Player_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RoomProto_Player_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rRoomPro.proto\"\370\002\n\tRoomProto\022%\n\nplayerL" +
      "ist\030\001 \003(\0132\021.RoomProto.Player\022\022\n\nsmallBli" +
      "nd\030\002 \002(\005\022\022\n\nbankerSeat\030\003 \002(\005\022\026\n\016smallBli" +
      "ndSeat\030\004 \002(\005\022\024\n\014bigBlindSeat\030\005 \002(\005\032\355\001\n\006P" +
      "layer\022\020\n\010PlayerId\030\001 \002(\005\022\014\n\004seat\030\002 \002(\005\022\020\n" +
      "\010nickname\030\003 \002(\t\022\020\n\010winTimes\030\004 \002(\005\022\021\n\tlos" +
      "eTimes\030\005 \002(\005\022\020\n\010portrait\030\006 \002(\005\022\026\n\016portra" +
      "itBorder\030\007 \002(\005\022\014\n\004male\030\010 \002(\010\022\014\n\004sign\030\t \002" +
      "(\t\022\024\n\014isChallenger\030\n \002(\010\022\020\n\010bankRoll\030\013 \002" +
      "(\005\022\014\n\004gold\030\014 \002(\005\022\020\n\010maxScore\030\r \002(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_RoomProto_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_RoomProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RoomProto_descriptor,
              new java.lang.String[] { "PlayerList", "SmallBlind", "BankerSeat", "SmallBlindSeat", "BigBlindSeat", });
          internal_static_RoomProto_Player_descriptor =
            internal_static_RoomProto_descriptor.getNestedTypes().get(0);
          internal_static_RoomProto_Player_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RoomProto_Player_descriptor,
              new java.lang.String[] { "PlayerId", "Seat", "Nickname", "WinTimes", "LoseTimes", "Portrait", "PortraitBorder", "Male", "Sign", "IsChallenger", "BankRoll", "Gold", "MaxScore", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
