// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoFactoryForConsole.proto

package poker.proto;

public final class ProtoFactoryForConsole {
  private ProtoFactoryForConsole() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RoomInfoReqProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 roomId = 1;
    /**
     * <code>required int32 roomId = 1;</code>
     */
    boolean hasRoomId();
    /**
     * <code>required int32 roomId = 1;</code>
     */
    int getRoomId();
  }
  /**
   * Protobuf type {@code poker.proto.RoomInfoReqProto}
   */
  public static final class RoomInfoReqProto extends
      com.google.protobuf.GeneratedMessage
      implements RoomInfoReqProtoOrBuilder {
    // Use RoomInfoReqProto.newBuilder() to construct.
    private RoomInfoReqProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomInfoReqProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomInfoReqProto defaultInstance;
    public static RoomInfoReqProto getDefaultInstance() {
      return defaultInstance;
    }

    public RoomInfoReqProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomInfoReqProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_RoomInfoReqProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_RoomInfoReqProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              poker.proto.ProtoFactoryForConsole.RoomInfoReqProto.class, poker.proto.ProtoFactoryForConsole.RoomInfoReqProto.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomInfoReqProto> PARSER =
        new com.google.protobuf.AbstractParser<RoomInfoReqProto>() {
      public RoomInfoReqProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomInfoReqProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomInfoReqProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private int roomId_;
    /**
     * <code>required int32 roomId = 1;</code>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 roomId = 1;</code>
     */
    public int getRoomId() {
      return roomId_;
    }

    private void initFields() {
      roomId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoomId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static poker.proto.ProtoFactoryForConsole.RoomInfoReqProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.proto.ProtoFactoryForConsole.RoomInfoReqProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.proto.ProtoFactoryForConsole.RoomInfoReqProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.proto.ProtoFactoryForConsole.RoomInfoReqProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.proto.ProtoFactoryForConsole.RoomInfoReqProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static poker.proto.ProtoFactoryForConsole.RoomInfoReqProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static poker.proto.ProtoFactoryForConsole.RoomInfoReqProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static poker.proto.ProtoFactoryForConsole.RoomInfoReqProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static poker.proto.ProtoFactoryForConsole.RoomInfoReqProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static poker.proto.ProtoFactoryForConsole.RoomInfoReqProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(poker.proto.ProtoFactoryForConsole.RoomInfoReqProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code poker.proto.RoomInfoReqProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements poker.proto.ProtoFactoryForConsole.RoomInfoReqProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_RoomInfoReqProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_RoomInfoReqProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                poker.proto.ProtoFactoryForConsole.RoomInfoReqProto.class, poker.proto.ProtoFactoryForConsole.RoomInfoReqProto.Builder.class);
      }

      // Construct using poker.proto.ProtoFactoryForConsole.RoomInfoReqProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_RoomInfoReqProto_descriptor;
      }

      public poker.proto.ProtoFactoryForConsole.RoomInfoReqProto getDefaultInstanceForType() {
        return poker.proto.ProtoFactoryForConsole.RoomInfoReqProto.getDefaultInstance();
      }

      public poker.proto.ProtoFactoryForConsole.RoomInfoReqProto build() {
        poker.proto.ProtoFactoryForConsole.RoomInfoReqProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public poker.proto.ProtoFactoryForConsole.RoomInfoReqProto buildPartial() {
        poker.proto.ProtoFactoryForConsole.RoomInfoReqProto result = new poker.proto.ProtoFactoryForConsole.RoomInfoReqProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomId_ = roomId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof poker.proto.ProtoFactoryForConsole.RoomInfoReqProto) {
          return mergeFrom((poker.proto.ProtoFactoryForConsole.RoomInfoReqProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(poker.proto.ProtoFactoryForConsole.RoomInfoReqProto other) {
        if (other == poker.proto.ProtoFactoryForConsole.RoomInfoReqProto.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoomId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        poker.proto.ProtoFactoryForConsole.RoomInfoReqProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (poker.proto.ProtoFactoryForConsole.RoomInfoReqProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 roomId = 1;
      private int roomId_ ;
      /**
       * <code>required int32 roomId = 1;</code>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 roomId = 1;</code>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <code>required int32 roomId = 1;</code>
       */
      public Builder setRoomId(int value) {
        bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 roomId = 1;</code>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:poker.proto.RoomInfoReqProto)
    }

    static {
      defaultInstance = new RoomInfoReqProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:poker.proto.RoomInfoReqProto)
  }

  public interface PlayerInfoReqProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 roomId = 1;
    /**
     * <code>required int32 roomId = 1;</code>
     */
    boolean hasRoomId();
    /**
     * <code>required int32 roomId = 1;</code>
     */
    int getRoomId();

    // required int32 playerId = 2;
    /**
     * <code>required int32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required int32 playerId = 2;</code>
     */
    int getPlayerId();
  }
  /**
   * Protobuf type {@code poker.proto.PlayerInfoReqProto}
   */
  public static final class PlayerInfoReqProto extends
      com.google.protobuf.GeneratedMessage
      implements PlayerInfoReqProtoOrBuilder {
    // Use PlayerInfoReqProto.newBuilder() to construct.
    private PlayerInfoReqProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerInfoReqProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerInfoReqProto defaultInstance;
    public static PlayerInfoReqProto getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerInfoReqProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerInfoReqProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              playerId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_PlayerInfoReqProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_PlayerInfoReqProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto.class, poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerInfoReqProto> PARSER =
        new com.google.protobuf.AbstractParser<PlayerInfoReqProto>() {
      public PlayerInfoReqProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerInfoReqProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerInfoReqProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private int roomId_;
    /**
     * <code>required int32 roomId = 1;</code>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 roomId = 1;</code>
     */
    public int getRoomId() {
      return roomId_;
    }

    // required int32 playerId = 2;
    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>required int32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    private void initFields() {
      roomId_ = 0;
      playerId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoomId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlayerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, playerId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, playerId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code poker.proto.PlayerInfoReqProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements poker.proto.ProtoFactoryForConsole.PlayerInfoReqProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_PlayerInfoReqProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_PlayerInfoReqProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto.class, poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto.Builder.class);
      }

      // Construct using poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_PlayerInfoReqProto_descriptor;
      }

      public poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto getDefaultInstanceForType() {
        return poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto.getDefaultInstance();
      }

      public poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto build() {
        poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto buildPartial() {
        poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto result = new poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomId_ = roomId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerId_ = playerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto) {
          return mergeFrom((poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto other) {
        if (other == poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoomId()) {
          
          return false;
        }
        if (!hasPlayerId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (poker.proto.ProtoFactoryForConsole.PlayerInfoReqProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 roomId = 1;
      private int roomId_ ;
      /**
       * <code>required int32 roomId = 1;</code>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 roomId = 1;</code>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <code>required int32 roomId = 1;</code>
       */
      public Builder setRoomId(int value) {
        bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 roomId = 1;</code>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = 0;
        onChanged();
        return this;
      }

      // required int32 playerId = 2;
      private int playerId_ ;
      /**
       * <code>required int32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>required int32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000002;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:poker.proto.PlayerInfoReqProto)
    }

    static {
      defaultInstance = new PlayerInfoReqProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:poker.proto.PlayerInfoReqProto)
  }

  public interface RoomListProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .poker.proto.RoomListProto.RoomProto roomList = 1;
    /**
     * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
     */
    java.util.List<poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto> 
        getRoomListList();
    /**
     * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
     */
    poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto getRoomList(int index);
    /**
     * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
     */
    int getRoomListCount();
    /**
     * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
     */
    java.util.List<? extends poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProtoOrBuilder> 
        getRoomListOrBuilderList();
    /**
     * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
     */
    poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProtoOrBuilder getRoomListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code poker.proto.RoomListProto}
   */
  public static final class RoomListProto extends
      com.google.protobuf.GeneratedMessage
      implements RoomListProtoOrBuilder {
    // Use RoomListProto.newBuilder() to construct.
    private RoomListProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomListProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomListProto defaultInstance;
    public static RoomListProto getDefaultInstance() {
      return defaultInstance;
    }

    public RoomListProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomListProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                roomList_ = new java.util.ArrayList<poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto>();
                mutable_bitField0_ |= 0x00000001;
              }
              roomList_.add(input.readMessage(poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          roomList_ = java.util.Collections.unmodifiableList(roomList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_RoomListProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_RoomListProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              poker.proto.ProtoFactoryForConsole.RoomListProto.class, poker.proto.ProtoFactoryForConsole.RoomListProto.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomListProto> PARSER =
        new com.google.protobuf.AbstractParser<RoomListProto>() {
      public RoomListProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomListProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomListProto> getParserForType() {
      return PARSER;
    }

    public interface RoomProtoOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required int32 roomId = 1;
      /**
       * <code>required int32 roomId = 1;</code>
       */
      boolean hasRoomId();
      /**
       * <code>required int32 roomId = 1;</code>
       */
      int getRoomId();

      // required int32 roomType = 2;
      /**
       * <code>required int32 roomType = 2;</code>
       */
      boolean hasRoomType();
      /**
       * <code>required int32 roomType = 2;</code>
       */
      int getRoomType();

      // required int32 roomLevel = 3;
      /**
       * <code>required int32 roomLevel = 3;</code>
       */
      boolean hasRoomLevel();
      /**
       * <code>required int32 roomLevel = 3;</code>
       */
      int getRoomLevel();

      // required int32 roomPhase = 4;
      /**
       * <code>required int32 roomPhase = 4;</code>
       */
      boolean hasRoomPhase();
      /**
       * <code>required int32 roomPhase = 4;</code>
       */
      int getRoomPhase();

      // required int32 playingCount = 6;
      /**
       * <code>required int32 playingCount = 6;</code>
       */
      boolean hasPlayingCount();
      /**
       * <code>required int32 playingCount = 6;</code>
       */
      int getPlayingCount();

      // required int32 sittingCount = 7;
      /**
       * <code>required int32 sittingCount = 7;</code>
       */
      boolean hasSittingCount();
      /**
       * <code>required int32 sittingCount = 7;</code>
       */
      int getSittingCount();

      // required int32 seatsCount = 8;
      /**
       * <code>required int32 seatsCount = 8;</code>
       */
      boolean hasSeatsCount();
      /**
       * <code>required int32 seatsCount = 8;</code>
       */
      int getSeatsCount();

      // required int32 betableCount = 9;
      /**
       * <code>required int32 betableCount = 9;</code>
       */
      boolean hasBetableCount();
      /**
       * <code>required int32 betableCount = 9;</code>
       */
      int getBetableCount();

      // required int32 noFoldCount = 10;
      /**
       * <code>required int32 noFoldCount = 10;</code>
       */
      boolean hasNoFoldCount();
      /**
       * <code>required int32 noFoldCount = 10;</code>
       */
      int getNoFoldCount();
    }
    /**
     * Protobuf type {@code poker.proto.RoomListProto.RoomProto}
     */
    public static final class RoomProto extends
        com.google.protobuf.GeneratedMessage
        implements RoomProtoOrBuilder {
      // Use RoomProto.newBuilder() to construct.
      private RoomProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private RoomProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final RoomProto defaultInstance;
      public static RoomProto getDefaultInstance() {
        return defaultInstance;
      }

      public RoomProto getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private RoomProto(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                roomId_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                roomType_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                roomLevel_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                roomPhase_ = input.readInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000010;
                playingCount_ = input.readInt32();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000020;
                sittingCount_ = input.readInt32();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000040;
                seatsCount_ = input.readInt32();
                break;
              }
              case 72: {
                bitField0_ |= 0x00000080;
                betableCount_ = input.readInt32();
                break;
              }
              case 80: {
                bitField0_ |= 0x00000100;
                noFoldCount_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_RoomListProto_RoomProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_RoomListProto_RoomProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.class, poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.Builder.class);
      }

      public static com.google.protobuf.Parser<RoomProto> PARSER =
          new com.google.protobuf.AbstractParser<RoomProto>() {
        public RoomProto parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new RoomProto(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<RoomProto> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required int32 roomId = 1;
      public static final int ROOMID_FIELD_NUMBER = 1;
      private int roomId_;
      /**
       * <code>required int32 roomId = 1;</code>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 roomId = 1;</code>
       */
      public int getRoomId() {
        return roomId_;
      }

      // required int32 roomType = 2;
      public static final int ROOMTYPE_FIELD_NUMBER = 2;
      private int roomType_;
      /**
       * <code>required int32 roomType = 2;</code>
       */
      public boolean hasRoomType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 roomType = 2;</code>
       */
      public int getRoomType() {
        return roomType_;
      }

      // required int32 roomLevel = 3;
      public static final int ROOMLEVEL_FIELD_NUMBER = 3;
      private int roomLevel_;
      /**
       * <code>required int32 roomLevel = 3;</code>
       */
      public boolean hasRoomLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 roomLevel = 3;</code>
       */
      public int getRoomLevel() {
        return roomLevel_;
      }

      // required int32 roomPhase = 4;
      public static final int ROOMPHASE_FIELD_NUMBER = 4;
      private int roomPhase_;
      /**
       * <code>required int32 roomPhase = 4;</code>
       */
      public boolean hasRoomPhase() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 roomPhase = 4;</code>
       */
      public int getRoomPhase() {
        return roomPhase_;
      }

      // required int32 playingCount = 6;
      public static final int PLAYINGCOUNT_FIELD_NUMBER = 6;
      private int playingCount_;
      /**
       * <code>required int32 playingCount = 6;</code>
       */
      public boolean hasPlayingCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 playingCount = 6;</code>
       */
      public int getPlayingCount() {
        return playingCount_;
      }

      // required int32 sittingCount = 7;
      public static final int SITTINGCOUNT_FIELD_NUMBER = 7;
      private int sittingCount_;
      /**
       * <code>required int32 sittingCount = 7;</code>
       */
      public boolean hasSittingCount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 sittingCount = 7;</code>
       */
      public int getSittingCount() {
        return sittingCount_;
      }

      // required int32 seatsCount = 8;
      public static final int SEATSCOUNT_FIELD_NUMBER = 8;
      private int seatsCount_;
      /**
       * <code>required int32 seatsCount = 8;</code>
       */
      public boolean hasSeatsCount() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 seatsCount = 8;</code>
       */
      public int getSeatsCount() {
        return seatsCount_;
      }

      // required int32 betableCount = 9;
      public static final int BETABLECOUNT_FIELD_NUMBER = 9;
      private int betableCount_;
      /**
       * <code>required int32 betableCount = 9;</code>
       */
      public boolean hasBetableCount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 betableCount = 9;</code>
       */
      public int getBetableCount() {
        return betableCount_;
      }

      // required int32 noFoldCount = 10;
      public static final int NOFOLDCOUNT_FIELD_NUMBER = 10;
      private int noFoldCount_;
      /**
       * <code>required int32 noFoldCount = 10;</code>
       */
      public boolean hasNoFoldCount() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 noFoldCount = 10;</code>
       */
      public int getNoFoldCount() {
        return noFoldCount_;
      }

      private void initFields() {
        roomId_ = 0;
        roomType_ = 0;
        roomLevel_ = 0;
        roomPhase_ = 0;
        playingCount_ = 0;
        sittingCount_ = 0;
        seatsCount_ = 0;
        betableCount_ = 0;
        noFoldCount_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasRoomId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasRoomType()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasRoomLevel()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasRoomPhase()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPlayingCount()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasSittingCount()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasSeatsCount()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBetableCount()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasNoFoldCount()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, roomId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, roomType_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, roomLevel_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, roomPhase_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(6, playingCount_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeInt32(7, sittingCount_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeInt32(8, seatsCount_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeInt32(9, betableCount_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeInt32(10, noFoldCount_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, roomId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, roomType_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, roomLevel_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, roomPhase_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, playingCount_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(7, sittingCount_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(8, seatsCount_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(9, betableCount_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10, noFoldCount_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code poker.proto.RoomListProto.RoomProto}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProtoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_RoomListProto_RoomProto_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_RoomListProto_RoomProto_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.class, poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.Builder.class);
        }

        // Construct using poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          roomId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          roomType_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          roomLevel_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          roomPhase_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          playingCount_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          sittingCount_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          seatsCount_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          betableCount_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          noFoldCount_ = 0;
          bitField0_ = (bitField0_ & ~0x00000100);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_RoomListProto_RoomProto_descriptor;
        }

        public poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto getDefaultInstanceForType() {
          return poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.getDefaultInstance();
        }

        public poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto build() {
          poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto buildPartial() {
          poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto result = new poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.roomId_ = roomId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.roomType_ = roomType_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.roomLevel_ = roomLevel_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.roomPhase_ = roomPhase_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.playingCount_ = playingCount_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.sittingCount_ = sittingCount_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.seatsCount_ = seatsCount_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.betableCount_ = betableCount_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.noFoldCount_ = noFoldCount_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto) {
            return mergeFrom((poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto other) {
          if (other == poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.getDefaultInstance()) return this;
          if (other.hasRoomId()) {
            setRoomId(other.getRoomId());
          }
          if (other.hasRoomType()) {
            setRoomType(other.getRoomType());
          }
          if (other.hasRoomLevel()) {
            setRoomLevel(other.getRoomLevel());
          }
          if (other.hasRoomPhase()) {
            setRoomPhase(other.getRoomPhase());
          }
          if (other.hasPlayingCount()) {
            setPlayingCount(other.getPlayingCount());
          }
          if (other.hasSittingCount()) {
            setSittingCount(other.getSittingCount());
          }
          if (other.hasSeatsCount()) {
            setSeatsCount(other.getSeatsCount());
          }
          if (other.hasBetableCount()) {
            setBetableCount(other.getBetableCount());
          }
          if (other.hasNoFoldCount()) {
            setNoFoldCount(other.getNoFoldCount());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasRoomId()) {
            
            return false;
          }
          if (!hasRoomType()) {
            
            return false;
          }
          if (!hasRoomLevel()) {
            
            return false;
          }
          if (!hasRoomPhase()) {
            
            return false;
          }
          if (!hasPlayingCount()) {
            
            return false;
          }
          if (!hasSittingCount()) {
            
            return false;
          }
          if (!hasSeatsCount()) {
            
            return false;
          }
          if (!hasBetableCount()) {
            
            return false;
          }
          if (!hasNoFoldCount()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required int32 roomId = 1;
        private int roomId_ ;
        /**
         * <code>required int32 roomId = 1;</code>
         */
        public boolean hasRoomId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 roomId = 1;</code>
         */
        public int getRoomId() {
          return roomId_;
        }
        /**
         * <code>required int32 roomId = 1;</code>
         */
        public Builder setRoomId(int value) {
          bitField0_ |= 0x00000001;
          roomId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 roomId = 1;</code>
         */
        public Builder clearRoomId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          roomId_ = 0;
          onChanged();
          return this;
        }

        // required int32 roomType = 2;
        private int roomType_ ;
        /**
         * <code>required int32 roomType = 2;</code>
         */
        public boolean hasRoomType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required int32 roomType = 2;</code>
         */
        public int getRoomType() {
          return roomType_;
        }
        /**
         * <code>required int32 roomType = 2;</code>
         */
        public Builder setRoomType(int value) {
          bitField0_ |= 0x00000002;
          roomType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 roomType = 2;</code>
         */
        public Builder clearRoomType() {
          bitField0_ = (bitField0_ & ~0x00000002);
          roomType_ = 0;
          onChanged();
          return this;
        }

        // required int32 roomLevel = 3;
        private int roomLevel_ ;
        /**
         * <code>required int32 roomLevel = 3;</code>
         */
        public boolean hasRoomLevel() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required int32 roomLevel = 3;</code>
         */
        public int getRoomLevel() {
          return roomLevel_;
        }
        /**
         * <code>required int32 roomLevel = 3;</code>
         */
        public Builder setRoomLevel(int value) {
          bitField0_ |= 0x00000004;
          roomLevel_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 roomLevel = 3;</code>
         */
        public Builder clearRoomLevel() {
          bitField0_ = (bitField0_ & ~0x00000004);
          roomLevel_ = 0;
          onChanged();
          return this;
        }

        // required int32 roomPhase = 4;
        private int roomPhase_ ;
        /**
         * <code>required int32 roomPhase = 4;</code>
         */
        public boolean hasRoomPhase() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required int32 roomPhase = 4;</code>
         */
        public int getRoomPhase() {
          return roomPhase_;
        }
        /**
         * <code>required int32 roomPhase = 4;</code>
         */
        public Builder setRoomPhase(int value) {
          bitField0_ |= 0x00000008;
          roomPhase_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 roomPhase = 4;</code>
         */
        public Builder clearRoomPhase() {
          bitField0_ = (bitField0_ & ~0x00000008);
          roomPhase_ = 0;
          onChanged();
          return this;
        }

        // required int32 playingCount = 6;
        private int playingCount_ ;
        /**
         * <code>required int32 playingCount = 6;</code>
         */
        public boolean hasPlayingCount() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>required int32 playingCount = 6;</code>
         */
        public int getPlayingCount() {
          return playingCount_;
        }
        /**
         * <code>required int32 playingCount = 6;</code>
         */
        public Builder setPlayingCount(int value) {
          bitField0_ |= 0x00000010;
          playingCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 playingCount = 6;</code>
         */
        public Builder clearPlayingCount() {
          bitField0_ = (bitField0_ & ~0x00000010);
          playingCount_ = 0;
          onChanged();
          return this;
        }

        // required int32 sittingCount = 7;
        private int sittingCount_ ;
        /**
         * <code>required int32 sittingCount = 7;</code>
         */
        public boolean hasSittingCount() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>required int32 sittingCount = 7;</code>
         */
        public int getSittingCount() {
          return sittingCount_;
        }
        /**
         * <code>required int32 sittingCount = 7;</code>
         */
        public Builder setSittingCount(int value) {
          bitField0_ |= 0x00000020;
          sittingCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 sittingCount = 7;</code>
         */
        public Builder clearSittingCount() {
          bitField0_ = (bitField0_ & ~0x00000020);
          sittingCount_ = 0;
          onChanged();
          return this;
        }

        // required int32 seatsCount = 8;
        private int seatsCount_ ;
        /**
         * <code>required int32 seatsCount = 8;</code>
         */
        public boolean hasSeatsCount() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>required int32 seatsCount = 8;</code>
         */
        public int getSeatsCount() {
          return seatsCount_;
        }
        /**
         * <code>required int32 seatsCount = 8;</code>
         */
        public Builder setSeatsCount(int value) {
          bitField0_ |= 0x00000040;
          seatsCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 seatsCount = 8;</code>
         */
        public Builder clearSeatsCount() {
          bitField0_ = (bitField0_ & ~0x00000040);
          seatsCount_ = 0;
          onChanged();
          return this;
        }

        // required int32 betableCount = 9;
        private int betableCount_ ;
        /**
         * <code>required int32 betableCount = 9;</code>
         */
        public boolean hasBetableCount() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>required int32 betableCount = 9;</code>
         */
        public int getBetableCount() {
          return betableCount_;
        }
        /**
         * <code>required int32 betableCount = 9;</code>
         */
        public Builder setBetableCount(int value) {
          bitField0_ |= 0x00000080;
          betableCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 betableCount = 9;</code>
         */
        public Builder clearBetableCount() {
          bitField0_ = (bitField0_ & ~0x00000080);
          betableCount_ = 0;
          onChanged();
          return this;
        }

        // required int32 noFoldCount = 10;
        private int noFoldCount_ ;
        /**
         * <code>required int32 noFoldCount = 10;</code>
         */
        public boolean hasNoFoldCount() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>required int32 noFoldCount = 10;</code>
         */
        public int getNoFoldCount() {
          return noFoldCount_;
        }
        /**
         * <code>required int32 noFoldCount = 10;</code>
         */
        public Builder setNoFoldCount(int value) {
          bitField0_ |= 0x00000100;
          noFoldCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 noFoldCount = 10;</code>
         */
        public Builder clearNoFoldCount() {
          bitField0_ = (bitField0_ & ~0x00000100);
          noFoldCount_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:poker.proto.RoomListProto.RoomProto)
      }

      static {
        defaultInstance = new RoomProto(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:poker.proto.RoomListProto.RoomProto)
    }

    // repeated .poker.proto.RoomListProto.RoomProto roomList = 1;
    public static final int ROOMLIST_FIELD_NUMBER = 1;
    private java.util.List<poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto> roomList_;
    /**
     * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
     */
    public java.util.List<poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto> getRoomListList() {
      return roomList_;
    }
    /**
     * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
     */
    public java.util.List<? extends poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProtoOrBuilder> 
        getRoomListOrBuilderList() {
      return roomList_;
    }
    /**
     * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
     */
    public int getRoomListCount() {
      return roomList_.size();
    }
    /**
     * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
     */
    public poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto getRoomList(int index) {
      return roomList_.get(index);
    }
    /**
     * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
     */
    public poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProtoOrBuilder getRoomListOrBuilder(
        int index) {
      return roomList_.get(index);
    }

    private void initFields() {
      roomList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getRoomListCount(); i++) {
        if (!getRoomList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < roomList_.size(); i++) {
        output.writeMessage(1, roomList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < roomList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static poker.proto.ProtoFactoryForConsole.RoomListProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.proto.ProtoFactoryForConsole.RoomListProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.proto.ProtoFactoryForConsole.RoomListProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poker.proto.ProtoFactoryForConsole.RoomListProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poker.proto.ProtoFactoryForConsole.RoomListProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static poker.proto.ProtoFactoryForConsole.RoomListProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static poker.proto.ProtoFactoryForConsole.RoomListProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static poker.proto.ProtoFactoryForConsole.RoomListProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static poker.proto.ProtoFactoryForConsole.RoomListProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static poker.proto.ProtoFactoryForConsole.RoomListProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(poker.proto.ProtoFactoryForConsole.RoomListProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code poker.proto.RoomListProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements poker.proto.ProtoFactoryForConsole.RoomListProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_RoomListProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_RoomListProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                poker.proto.ProtoFactoryForConsole.RoomListProto.class, poker.proto.ProtoFactoryForConsole.RoomListProto.Builder.class);
      }

      // Construct using poker.proto.ProtoFactoryForConsole.RoomListProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomListBuilder_ == null) {
          roomList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          roomListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return poker.proto.ProtoFactoryForConsole.internal_static_poker_proto_RoomListProto_descriptor;
      }

      public poker.proto.ProtoFactoryForConsole.RoomListProto getDefaultInstanceForType() {
        return poker.proto.ProtoFactoryForConsole.RoomListProto.getDefaultInstance();
      }

      public poker.proto.ProtoFactoryForConsole.RoomListProto build() {
        poker.proto.ProtoFactoryForConsole.RoomListProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public poker.proto.ProtoFactoryForConsole.RoomListProto buildPartial() {
        poker.proto.ProtoFactoryForConsole.RoomListProto result = new poker.proto.ProtoFactoryForConsole.RoomListProto(this);
        int from_bitField0_ = bitField0_;
        if (roomListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            roomList_ = java.util.Collections.unmodifiableList(roomList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.roomList_ = roomList_;
        } else {
          result.roomList_ = roomListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof poker.proto.ProtoFactoryForConsole.RoomListProto) {
          return mergeFrom((poker.proto.ProtoFactoryForConsole.RoomListProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(poker.proto.ProtoFactoryForConsole.RoomListProto other) {
        if (other == poker.proto.ProtoFactoryForConsole.RoomListProto.getDefaultInstance()) return this;
        if (roomListBuilder_ == null) {
          if (!other.roomList_.isEmpty()) {
            if (roomList_.isEmpty()) {
              roomList_ = other.roomList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRoomListIsMutable();
              roomList_.addAll(other.roomList_);
            }
            onChanged();
          }
        } else {
          if (!other.roomList_.isEmpty()) {
            if (roomListBuilder_.isEmpty()) {
              roomListBuilder_.dispose();
              roomListBuilder_ = null;
              roomList_ = other.roomList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              roomListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRoomListFieldBuilder() : null;
            } else {
              roomListBuilder_.addAllMessages(other.roomList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getRoomListCount(); i++) {
          if (!getRoomList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        poker.proto.ProtoFactoryForConsole.RoomListProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (poker.proto.ProtoFactoryForConsole.RoomListProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .poker.proto.RoomListProto.RoomProto roomList = 1;
      private java.util.List<poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto> roomList_ =
        java.util.Collections.emptyList();
      private void ensureRoomListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          roomList_ = new java.util.ArrayList<poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto>(roomList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto, poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.Builder, poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProtoOrBuilder> roomListBuilder_;

      /**
       * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
       */
      public java.util.List<poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto> getRoomListList() {
        if (roomListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(roomList_);
        } else {
          return roomListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
       */
      public int getRoomListCount() {
        if (roomListBuilder_ == null) {
          return roomList_.size();
        } else {
          return roomListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
       */
      public poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto getRoomList(int index) {
        if (roomListBuilder_ == null) {
          return roomList_.get(index);
        } else {
          return roomListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
       */
      public Builder setRoomList(
          int index, poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto value) {
        if (roomListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomListIsMutable();
          roomList_.set(index, value);
          onChanged();
        } else {
          roomListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
       */
      public Builder setRoomList(
          int index, poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.Builder builderForValue) {
        if (roomListBuilder_ == null) {
          ensureRoomListIsMutable();
          roomList_.set(index, builderForValue.build());
          onChanged();
        } else {
          roomListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
       */
      public Builder addRoomList(poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto value) {
        if (roomListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomListIsMutable();
          roomList_.add(value);
          onChanged();
        } else {
          roomListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
       */
      public Builder addRoomList(
          int index, poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto value) {
        if (roomListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomListIsMutable();
          roomList_.add(index, value);
          onChanged();
        } else {
          roomListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
       */
      public Builder addRoomList(
          poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.Builder builderForValue) {
        if (roomListBuilder_ == null) {
          ensureRoomListIsMutable();
          roomList_.add(builderForValue.build());
          onChanged();
        } else {
          roomListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
       */
      public Builder addRoomList(
          int index, poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.Builder builderForValue) {
        if (roomListBuilder_ == null) {
          ensureRoomListIsMutable();
          roomList_.add(index, builderForValue.build());
          onChanged();
        } else {
          roomListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
       */
      public Builder addAllRoomList(
          java.lang.Iterable<? extends poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto> values) {
        if (roomListBuilder_ == null) {
          ensureRoomListIsMutable();
          super.addAll(values, roomList_);
          onChanged();
        } else {
          roomListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
       */
      public Builder clearRoomList() {
        if (roomListBuilder_ == null) {
          roomList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          roomListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
       */
      public Builder removeRoomList(int index) {
        if (roomListBuilder_ == null) {
          ensureRoomListIsMutable();
          roomList_.remove(index);
          onChanged();
        } else {
          roomListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
       */
      public poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.Builder getRoomListBuilder(
          int index) {
        return getRoomListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
       */
      public poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProtoOrBuilder getRoomListOrBuilder(
          int index) {
        if (roomListBuilder_ == null) {
          return roomList_.get(index);  } else {
          return roomListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
       */
      public java.util.List<? extends poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProtoOrBuilder> 
           getRoomListOrBuilderList() {
        if (roomListBuilder_ != null) {
          return roomListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(roomList_);
        }
      }
      /**
       * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
       */
      public poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.Builder addRoomListBuilder() {
        return getRoomListFieldBuilder().addBuilder(
            poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.getDefaultInstance());
      }
      /**
       * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
       */
      public poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.Builder addRoomListBuilder(
          int index) {
        return getRoomListFieldBuilder().addBuilder(
            index, poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.getDefaultInstance());
      }
      /**
       * <code>repeated .poker.proto.RoomListProto.RoomProto roomList = 1;</code>
       */
      public java.util.List<poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.Builder> 
           getRoomListBuilderList() {
        return getRoomListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto, poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.Builder, poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProtoOrBuilder> 
          getRoomListFieldBuilder() {
        if (roomListBuilder_ == null) {
          roomListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto, poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProto.Builder, poker.proto.ProtoFactoryForConsole.RoomListProto.RoomProtoOrBuilder>(
                  roomList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          roomList_ = null;
        }
        return roomListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:poker.proto.RoomListProto)
    }

    static {
      defaultInstance = new RoomListProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:poker.proto.RoomListProto)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_poker_proto_RoomInfoReqProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_poker_proto_RoomInfoReqProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_poker_proto_PlayerInfoReqProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_poker_proto_PlayerInfoReqProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_poker_proto_RoomListProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_poker_proto_RoomListProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_poker_proto_RoomListProto_RoomProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_poker_proto_RoomListProto_RoomProto_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034ProtoFactoryForConsole.proto\022\013poker.pr" +
      "oto\"\"\n\020RoomInfoReqProto\022\016\n\006roomId\030\001 \002(\005\"" +
      "6\n\022PlayerInfoReqProto\022\016\n\006roomId\030\001 \002(\005\022\020\n" +
      "\010playerId\030\002 \002(\005\"\210\002\n\rRoomListProto\0226\n\010roo" +
      "mList\030\001 \003(\0132$.poker.proto.RoomListProto." +
      "RoomProto\032\276\001\n\tRoomProto\022\016\n\006roomId\030\001 \002(\005\022" +
      "\020\n\010roomType\030\002 \002(\005\022\021\n\troomLevel\030\003 \002(\005\022\021\n\t" +
      "roomPhase\030\004 \002(\005\022\024\n\014playingCount\030\006 \002(\005\022\024\n" +
      "\014sittingCount\030\007 \002(\005\022\022\n\nseatsCount\030\010 \002(\005\022" +
      "\024\n\014betableCount\030\t \002(\005\022\023\n\013noFoldCount\030\n \002",
      "(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_poker_proto_RoomInfoReqProto_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_poker_proto_RoomInfoReqProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_poker_proto_RoomInfoReqProto_descriptor,
              new java.lang.String[] { "RoomId", });
          internal_static_poker_proto_PlayerInfoReqProto_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_poker_proto_PlayerInfoReqProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_poker_proto_PlayerInfoReqProto_descriptor,
              new java.lang.String[] { "RoomId", "PlayerId", });
          internal_static_poker_proto_RoomListProto_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_poker_proto_RoomListProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_poker_proto_RoomListProto_descriptor,
              new java.lang.String[] { "RoomList", });
          internal_static_poker_proto_RoomListProto_RoomProto_descriptor =
            internal_static_poker_proto_RoomListProto_descriptor.getNestedTypes().get(0);
          internal_static_poker_proto_RoomListProto_RoomProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_poker_proto_RoomListProto_RoomProto_descriptor,
              new java.lang.String[] { "RoomId", "RoomType", "RoomLevel", "RoomPhase", "PlayingCount", "SittingCount", "SeatsCount", "BetableCount", "NoFoldCount", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
